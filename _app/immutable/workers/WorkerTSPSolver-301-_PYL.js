(function(){"use strict";const f="unsolvable";class p{}class r{static SerializableClass(e){return function(s){const n=e??s.name;s.prototype.__type=n,r.registerClass(n,s)}}static serialize(e){if(e==null)return e;if(Array.isArray(e))return e.map(r.serialize);if(e instanceof Set)return{__type:"Set",values:Array.from(e).map(r.serialize)};if(e instanceof Map)return{__type:"Map",entries:Array.from(e.entries()).map(([s,n])=>[r.serialize(s),r.serialize(n)])};if(typeof e=="object"){if(Array.isArray(e))return e.map(r.serialize);const s=e.constructor,o={__type:e.__type??s.name};for(const[i,a]of Object.entries(e))o[i]=r.serialize(a);return o}return e}static revive(e){if(e==null)return e;if(Array.isArray(e))return e.map(r.revive);if(e.__type==="Set")return new Set(e.values.map(r.revive));if(e.__type==="Map")return new Map(e.entries.map(([s,n])=>[r.revive(s),r.revive(n)]));if(e.__type){const s=r.getClass(e.__type);if(!s)throw new Error(`Serializer - Unknown class: ${e.__type}`);const n=Object.create(s.prototype);for(const[o,i]of Object.entries(e))o!=="__type"&&(n[o]=r.revive(i));return n}return e}static registerClass(e,s){r.classRegistry.set(e,s)}static getClass(e){return r.classRegistry.get(e)}static classRegistry=new Map}r.registerClass(Object.name,Object);const l="n:",u="e:";function h(t,e,s){return s.indexOf(t)===e}var m=Object.getOwnPropertyDescriptor,y=(t,e,s,n)=>{for(var o=n>1?void 0:n?m(e,s):e,i=t.length-1,a;i>=0;i--)(a=t[i])&&(o=a(o)||o);return o};let d=class extends p{_nodes;_edges;constructor(){super(),this._nodes=new Set,this._edges=new Set}addNode(t){t.classes==null&&(t.classes=""),!this.nodes.find(e=>e.id==t.id)&&this._nodes.add(t)}addEdge(t){t.classes==null&&(t.classes=""),!this.edges.find(e=>e.id==t.id)&&this._edges.add(t)}get nodes(){return Array.from(this._nodes.values())}get edges(){return Array.from(this._edges.values())}removeNode(t){if(!this._nodes.has(t))return;this._nodes.delete(t),Array.from(this.edges).filter(s=>s.to===t.id||s.from===t.id).forEach(s=>this._edges.delete(s))}removeEdge(t){this._edges.delete(t)}empty(){return this.nodes.length==0}copy(){const t=new d;for(const e of this._nodes)t.addNode({id:e.id,label:e.label,position:e.position?{...e.position}:void 0,classes:e.classes});for(const e of this._edges)t.addEdge({id:e.id,from:e.from,to:e.to,weight:e.weight,classes:e.classes});return t}asString(){const t=this.nodes.map(s=>s.id.slice(l.length)).join(`
`),e=this.edges.map(s=>s.from.slice(l.length)+" "+s.to.slice(l.length)+(s.weight!=null?" "+s.weight:"")).join(`
`);return t+`
`+e+`
`}static fromString(t){const e=t.split(`
`).map(n=>n.trim()).filter(n=>n.length).filter(h);let s=new d;console.debug("LINES",e);for(let n=0;n<e.length;n++){const i=e[n].split(" ").map(a=>a.trim()).filter(a=>a.length);if(i.length==1){const a=i;s.addNode({id:l+a})}else if(i.length<=3){const a=i[0],c=i[1];let g;if(i.length==3)try{g=Number.parseFloat(i[2])}catch{return`On the line ${n}, couldn't parse the weight: '${i[2]}Please enter a number (floating allowed)`}s.addNode({id:l+a}),s.addNode({id:l+c}),s.addEdge({id:u+`${a}-${c}`,from:l+a,to:l+c,weight:g})}}return s}toSerializedString(t=!1){const e={nodes:this.nodes.map(s=>({id:s.id,label:s.label??null,position:s.position??null,classes:s.classes??""})),edges:this.edges.map(s=>({id:s.id,from:s.from,to:s.to,weight:s.weight??null,classes:s.classes??""}))};return JSON.stringify(e,null,t?2:0)}static fromSerializedString(t){const e=JSON.parse(t),s=new d;if(Array.isArray(e.nodes))for(const n of e.nodes)s.addNode({id:n.id,label:n.label??void 0,position:n.position??void 0,classes:n.classes??""});if(Array.isArray(e.edges))for(const n of e.edges)s.addEdge({id:n.id,from:n.from,to:n.to,weight:n.weight??void 0,classes:n.classes??""});return s}};d=y([r.SerializableClass()],d);class v{instance;constructor(e){this.instance=e}solve(){throw new Error("Method not implemented.")}}self.onmessage=async t=>{const e=d.fromSerializedString(t.data),s=new v(e);try{const n=s.solve();postMessage(n||f)}finally{postMessage(f)}}})();
