(function(){"use strict";const p="unsolvable";class a{static SerializableClass(){return function(e){const s=e.name;e.prototype.__type=s,a.registerClass(s,e)}}static serialize(e){if(e==null)return e;if(Array.isArray(e))return e.map(a.serialize);if(e instanceof Set)return{__type:"Set",values:Array.from(e).map(a.serialize)};if(e instanceof Map)return{__type:"Map",entries:Array.from(e.entries()).map(([s,t])=>[a.serialize(s),a.serialize(t)])};if(typeof e=="object"){if(Array.isArray(e))return e.map(a.serialize);const s=e.constructor,n={__type:e.__type??s.name};for(const[i,o]of Object.entries(e))n[i]=a.serialize(o);return n}return e}static revive(e){if(e==null)return e;if(Array.isArray(e))return e.map(a.revive);if(e.__type==="Set")return new Set(e.values.map(a.revive));if(e.__type==="Map")return new Map(e.entries.map(([s,t])=>[a.revive(s),a.revive(t)]));if(e.__type){const s=a.getClass(e.__type);if(!s)throw new Error(`Serializer - Unknown class: ${e.__type}`);const t=Object.create(s.prototype);for(const[n,i]of Object.entries(e))n!=="__type"&&(t[n]=a.revive(i));return t}return e}static registerClass(e,s){a.classRegistry.set(e,s)}static getClass(e){return a.classRegistry.get(e)}static classRegistry=new Map}a.registerClass(Object.name,Object);var h=Object.getOwnPropertyDescriptor,y=(r,e,s,t)=>{for(var n=t>1?void 0:t?h(e,s):e,i=r.length-1,o;i>=0;i--)(o=r[i])&&(n=o(n)||n);return n};let f=class{path;constructor(r){this.path=r}};f=y([a.SerializableClass()],f);class v{instance;constructor(e){this.instance=e}async solve(){const e=this.instance.nodes,s=this.instance.edges;if(this.instance.empty())throw new Error("Graph is empty.");const t=new Map;for(const c of e)t.set(c.id,new Set);for(const c of s)t.has(c.from)&&t.has(c.to)&&t.get(c.from).add(c.to);const n=e[0].id,i=[n],o=new Set([n]);if(!this.backtrack(n,n,o,i,e.length,t))return p;const A=this.instance.copy(),u=new Array;return i.forEach(c=>{const g=A.nodes.find(C=>C.id==c);if(!g)throw new Error(`Node id in the path is not pointing to any valid node: ${c}`);u.push(g)}),new f(u)}backtrack(e,s,t,n,i,o){if(t.size===i)return o.get(e)?.has(s)?(n.push(s),!0):!1;for(const l of o.get(e)??[])if(!t.has(l)){if(t.add(l),n.push(l),this.backtrack(l,s,t,n,i,o))return!0;t.delete(l),n.pop()}return!1}}class m{}var w=Object.getOwnPropertyDescriptor,_=(r,e,s,t)=>{for(var n=t>1?void 0:t?w(e,s):e,i=r.length-1,o;i>=0;i--)(o=r[i])&&(n=o(n)||n);return n};let d=class extends m{_nodes;_edges;constructor(){super(),this._nodes=new Set,this._edges=new Set}addNode(r){r.classes==null&&(r.classes=""),this._nodes.add(r)}addEdge(r){r.classes==null&&(r.classes=""),this._edges.add(r)}get nodes(){return Array.from(this._nodes.values())}get edges(){return Array.from(this._edges.values())}removeNode(r){if(!this._nodes.has(r))return;this._nodes.delete(r),Array.from(this.edges).filter(s=>s.to===r.id||s.from===r.id).forEach(s=>this._edges.delete(s))}removeEdge(r){this._edges.delete(r)}empty(){return this.nodes.length==0||this.edges.length==0}copy(){const r=new d;for(const e of this._nodes)r.addNode({id:e.id,label:e.label,position:e.position?{...e.position}:void 0,classes:e.classes});for(const e of this._edges)r.addEdge({id:e.id,from:e.from,to:e.to,weight:e.weight,classes:e.classes});return r}toSerializedString(r=!1){const e={nodes:this.nodes.map(s=>({id:s.id,label:s.label??null,position:s.position??null,classes:s.classes??""})),edges:this.edges.map(s=>({id:s.id,from:s.from,to:s.to,weight:s.weight??null,classes:s.classes??""}))};return JSON.stringify(e,null,r?2:0)}static fromSerializedString(r){const e=JSON.parse(r),s=new d;if(Array.isArray(e.nodes))for(const t of e.nodes)s.addNode({id:t.id,label:t.label??void 0,position:t.position??void 0,classes:t.classes??""});if(Array.isArray(e.edges))for(const t of e.edges)s.addEdge({id:t.id,from:t.from,to:t.to,weight:t.weight??void 0,classes:t.classes??""});return s}};d=_([a.SerializableClass()],d),self.onmessage=async r=>{const e=d.fromSerializedString(r.data),t=await new v(e).solve();postMessage(t||p)}})();
